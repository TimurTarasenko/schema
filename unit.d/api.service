[Unit]
Description=api
Requires=docker.service
After=docker.service
Description=eventzimmer's event API for storing events

[Service]
Restart=always

# Remove old containers, images and volumes
ExecStartPre=/usr/bin/docker-compose -f docker-compose.yml -f docker-compose.prod.yml down -v
ExecStartPre=/usr/bin/docker-compose -f docker-compose.yml -f docker-compose.prod rm -v
ExecStartPre=-/bin/bash -c 'docker volume rm $(docker volume ls -q)'
ExecStartPre=-/bin/bash -c 'docker rmi $(docker images | grep "<none>" | awk \'{print $3}\')'
ExecStartPre=-/bin/bash -c 'docker rm -v $(docker ps -aq)'

# Compose up
ExecStart=/usr/bin/docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

# Compose down, remove containers and volumes
ExecStop=/usr/bin/docker-compose -f docker-compose.yml -f docker-compose.prod.yml down -v

# Who executes the service
User=ubuntu
Group=docker
WorkingDirectory=/home/ubuntu/schema

[Install]
WantedBy=multi-user.target
